////
/// rb-sticky
/// Creates a sticky element, that can be stuck to the top or the bottom of the viewport.
///
///
//// -------------------------
$stickyJSCFG: (
    container: '.is-sticky-parent', // false || 'parent' || 'positionedParent' || '.selector'
    switchedOff: false,
    topOffset: false,
    bottomOffset: false,
    progress: 0,
    childSel: 'find(.sticky-element)',
    setWidth: true,
    resetSwitchedOff: true,
    childStyle: '',
);

.rb-sticky {
    @include rb-js-export(map_merge($stickyJSCFG, (
        topOffset: 0,
        bottomOffset: false,
    )));

    //DONT CHANGE: important set properties shouldn't be changed, use an outer or inner element to apply does styles */
    float: none !important;
    left: auto !important;
    right: auto !important;
    border: none !important;
    padding: 0 !important;
    position: static;
    backface-visibility: hidden;
    //DONT CHANGE:

    //Default is top
    top: auto;
    bottom: auto;
    z-index: 5;



    &.is-bottom {
        @include rb-js-export(map_merge($stickyJSCFG, (
            bottomOffset: 0,
            topOffset: false,
        )));
    }

    &.is-fixed {
        position: fixed !important;
    }

    &.is-top-150 {
        @include rb-js-export(map_merge($stickyJSCFG, (
            topOffset: 150,
            bottomOffset: false,
        )));
    }

    &.is-bottom-15 {
        @include rb-js-export(map_merge($stickyJSCFG, (
            bottomOffset: 150,
            topOffset: false,
        )));
    }

    &.progress-showcase {
        @include exportToJS(map-merge($stickyJSCFG, (
        	progress: 100
        )));

        height: auto;
        transition: 300ms background-color;

        &.is-fixed-progressed {
            background: #600;
        }

        .sticky-element {
            font-size: 18px;
            min-height: 100px;

            @include exportToJS((
                fontSize: 12,
                minHeight: 50,
            ));

        }
    }
}

